#include <winsock2.h>
#pragma comment(lib,"ws2_32.lib")
WSADATA wsaData;//初始化必要
SOCKET sockS;   //服务器套接字
SOCKADDR_IN addrS;  //服务器地址
SOCKADDR_IN addrC;  //客户机地址
int len=sizeof(SOCKADDR);   //套接字地址
int err;    //判断
err=WSDStartup(MAKEWORD(2,2)，&wsaData); //初始化 通过wsadata获取winsock信息
sockS=socket(AF_INET,SOCK_DGRAM,IPPROTO_UDP);   //建立无连接UDP套接字
addrS.sin_addr.S_un.S_addr=htonl(INADDR_ANY);   //设置服务器地址
addrS.sin_family=AF_INET;   //设置地址家族 默认
addrS.sin_port=htons(6000); //设置端口号6000
err=bind(sockS,(SOCKADDR*)&addrS,len)  //把套接字绑定到本地址和指定端口号上
err=listen(sockS,4);    //监听 最多4个客户机在队列
SOCKET sockCoon=accept(sockS,(SOCKADDR*)&addrC,&len);   //建立连接
int ret=recvfrom(sockS,recdata,255,0,(SOCKADDR*)&addrC,&len);
if(ret>0)
recdata[ret] = 0x00;
		cout<<"接受一个链接：%s\t\r"+inet_ntoa(addrC.sin_addr);
		cout<<recdata;

closesocket(sockS);
WSACleanup();

第一步：导入库文件 #include<winsock2.h> #pragma comment(lib,"ws2_32.lib")
第二步：初始化 WSADATA wsa; wsa=WSDStartup()



程序：进制转换
输入二进制、十进制、十六进制自动识别
转换为其他两种格式



//string转int		OK
int stringtoint(string s) {
	int n;
	stringstream stm;
	stm << s;
	stm >> n;
	return n;
}

//int转string		OK
string inttostring(int n){
	stringstream s;
	s << n;
	string str = s.str();
	return str;
}



//字符数组转string		OK
string char_to_string(char ch[])
{
	string str = ch;
	return str;
}

//字符串转字符数组		FALSE
void string_to_char( const char *ch, string str) {
	ch = str.data();//ch=str.c_str();

	/*方法
	const char *c;
	string str="asdfg";
	c=str.data();//或c=str.c_str();
	
	*/
}


//十进制转二进制存入字符串中	OK
string dex_to_2(int n) {
	string str;
	int i = 0;

	/*十进制转二进制*/
	while (n) {
		int a = n % 2;
		if (a == 0)
			str += "0";
		else
			str += "1";
		n = n / 2;
	}

	reverse(str.begin(), str.end());//字符串逆序

	return str;
}

//十进制转n进制			OK
string dex_to_n(int m, int n) {
	//m转为n进制n<=36
	if (n > 36||n<2)return "ERROR! N-[2,36]";
	string str;
	char N[36];
	int t = 0;
	for (int i = 48; i < 58; ++i) 
	{
		N[t++]= i;
	}
	for (int j = 65; j <= 90; ++j)
	{
		N[t++] = j;
	}
	

	while (m) {
		int temp = m%n;
		str += N[temp];
		m = m / n;
	}

	reverse(str.begin(), str.end());//字符串逆序

	return str;
}

